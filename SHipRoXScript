local OrionLib = loadstring(game:HttpGet(('https://pastebin.com/raw/WRUyYTdY')))()
local Window = OrionLib:MakeWindow({Name = "SHipRoX Hub | NEW YEAR UPDATE", HidePremium = false, SaveConfig = true, IntroText = "SHipRoX Hub", ConfigFolder = "SHipRoX Hub"})

local Tab = Window:MakeTab({
	Name = "Main Tab",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local Section = Tab:AddSection({
	Name = "All Main Is Working"
})
OrionLib:MakeNotification({
	Name = "Player",
	Content = "WELCOME TO SHipRoX HUB SCRIPT MVSD",
	Image = "rbxassetid://4483345998",
	Time = 8
})

_G.HeadSize = 11
_G.Disabled = true
local hitboxConnection

-- Function to update hitboxes
local function updateHitboxes()
    for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
        if player.Name ~= game:GetService('Players').LocalPlayer.Name then
            pcall(function()
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    player.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
                    player.Character.HumanoidRootPart.Transparency = 0.7
                    player.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                    player.Character.HumanoidRootPart.Material = "Neon"
                    player.Character.HumanoidRootPart.CanCollide = false
                end
            end)
        end
    end
end

-- Function to reset hitboxes
local function resetHitboxes()
    for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
        if player.Name ~= game:GetService('Players').LocalPlayer.Name then
            pcall(function()
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    player.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 2) -- Reset to default size
                    player.Character.HumanoidRootPart.Transparency = 0 -- Reset transparency
                    player.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey") -- Reset color
                    player.Character.HumanoidRootPart.Material = "SmoothPlastic" -- Reset material
                    player.Character.HumanoidRootPart.CanCollide = true -- Reset collision
                end
            end)
        end
    end
end

-- Function to toggle hitbox
local function toggleHitbox(state)
    _G.Disabled = not state
    if state then
        hitboxConnection = game:GetService('RunService').RenderStepped:Connect(updateHitboxes)
    else
        if hitboxConnection then
            hitboxConnection:Disconnect() -- Disconnect the event when toggled off
            hitboxConnection = nil
        end
        resetHitboxes() -- Ensure this is called to reset hitboxes
    end
end

-- Create a Toggle for Hitbox
Tab:AddToggle({
    Name = "Enable Hitbox",
    Default = false,
    Save = false,
    Flag = "hitboxToggle",
    Callback = function(value)
        toggleHitbox(value)
    end
})
Tab:AddTextbox({
	Name = "Hitbox Size",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
   _G.HeadSize = tonumber(Value)
	end	  
})

Tab:AddButton({
	Name = "Infinite Jump",
	Callback = function()
      		local InfiniteJumpEnabled = true
game:GetService("UserInputService").JumpRequest:connect(function()
	if InfiniteJumpEnabled then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)
  	end
})

Tab:AddButton({
	Name = "Fly Gui Script",
	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Shrxgames/SG-SCRIPT/refs/heads/main/Fly%20gui%20Script"))()
  	end
})

local espEnabled = false
local espBoxes = {} -- Table to keep track of ESP boxes

-- Function to create ESP for a specific player
local function createESPForPlayer(player)
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart and not humanoidRootPart:FindFirstChild("EspBox") then
            local esp = Instance.new("BoxHandleAdornment")
            esp.Adornee = humanoidRootPart
            esp.ZIndex = 0
            esp.Size = Vector3.new(4, 6, 2) -- Adjust size for better visibility
            esp.Transparency = 0.5 -- Changes Transparency 

            -- Set color based on team
            if player.Team == game.Players.LocalPlayer.Team then
                esp.Color3 = Color3.fromRGB(0, 255, 0) -- Green for teammates
            else
                esp.Color3 = Color3.fromRGB(255, 0, 0) -- Red for enemies
            end
            
            esp.AlwaysOnTop = true
            esp.Name = "EspBox"
            esp.Parent = humanoidRootPart -- Set the parent to the humanoid root part
            table.insert(espBoxes, esp) -- Store the ESP box in the table
        end
    end
end

-- Function to create ESP for all players
local function createESP()
    while espEnabled do
        wait(0.5)
        for _, player in ipairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                createESPForPlayer(player) -- Create ESP for each player
            end
        end
    end
end

-- Function to remove ESP
local function removeESP()
    for _, esp in ipairs(espBoxes) do
        if esp and esp:IsA("BoxHandleAdornment") then
            esp:Destroy()
        end
    end
    espBoxes = {} -- Clear the table after removing
end

-- Function to toggle ESP
local function toggleESP(state)
    espEnabled = state
    if state then
        removeESP() -- Clear existing ESP boxes before starting
        spawn(createESP) -- Start creating ESP in a new thread
    else
        removeESP() -- Remove existing ESP boxes
    end
end

-- Create a Toggle for ESP
Tab:AddToggle({
    Name = "Enable ESP",
    Default = false,
    Save = true,
    Flag = "espToggle",
    Callback = function(value)
        toggleESP(value)
    end
})

-- Cleanup when the character is removed
game.Players.LocalPlayer.CharacterRemoving:Connect(function()
    espEnabled = false
    removeESP() -- Remove ESP boxes if the character is removed
end)

-- Ensure ESP is created for players when they respawn
game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if espEnabled then
            createESPForPlayer(player) -- Create ESP for the new character
        end
    end)
end)

-- Ensure ESP is created for existing players
for _, player in ipairs(game.Players:GetPlayers()) do
    player.CharacterAdded:Connect(function()
        if espEnabled then
            createESPForPlayer(player) -- Create ESP for the new character
        end
    end)
end

-- Ensure ESP is removed when the script is disabled
game.Players.LocalPlayer:GetPropertyChangedSignal("Character"):Connect(function()
    if not espEnabled then
        removeESP()
    end
end)

Tab:AddTextbox({
	Name = "Walk Speed Changer",
	Default = "",
	TextDisappear = true,
	Callback = function(Value) game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
	end	  
})

Tab:AddTextbox({
	Name = "Jump Power Changer",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
	end	  
})

Tab:AddButton({
	Name = "Reset Jump Power & Walk Speed",
	Callback = function()    	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 30

game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
  	end    
})

local noclipEnabled = false

-- Function to toggle Noclip
local function toggleNoclip(state)
    noclipEnabled = state
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    -- Enable or disable noclip
    if noclipEnabled then
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end

        -- Noclip loop
        while noclipEnabled do
            wait()
            character:TranslateBy(Vector3.new(0, 0, 0)) -- This keeps the character in place
        end
    else
        -- Reset CanCollide to true
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

Tab:AddToggle({
    Name = "Enable Noclip",
    Default = false,
    Save = true,
    Flag = "noclipToggle",
    Callback = function(value)
        toggleNoclip(value)
    end
})

local Tab = Window:MakeTab({
	Name = "Credits",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local Section = Tab:AddSection({
	Name = "Announcement"
})
Tab:AddParagraph("Announcement Update","I changed the ui to orion lib because on kavo is so many bug's and error and the Noclip is working now Happy New Year Everyone")
Tab:AddLabel("Updated by SHipRoX Hub As SHRX SCRIPT")
Tab:AddLabel("Subscribe To My YouTube Channel ðŸ‘‡")
Tab:AddButton({
  Name = "YouTube Channel Link",
  Callback = function()   setclipboard("https://www.youtube.com/@SHRX-SCRIPT")
  print("Link copied to clipboard!")
    OrionLib:MakeNotification({
      Name = "Link Copied!",
      Content = "The link has been copied to your clipboard.",
      Image = "rbxassetid://4483345998",
      Time = 8
    })
  end
})

OrionLib:Init()
